CREATE TABLE IF NOT EXISTS users (
  UserID INTEGER PRIMARY KEY AUTOINCREMENT,
  Username VARCHAR(50) UNIQUE NOT NULL,
  Email VARCHAR(255) UNIQUE NOT NULL,
  Bio TEXT,
  ProfilePicture TEXT,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
);

CREATE TRIGGER IF NOT EXISTS update_user_updated_at
AFTER UPDATE ON users
FOR EACH ROW
BEGIN
  UPDATE users SET updated_at = CURRENT_TIMESTAMP WHERE UserID = OLD.UserID;
END;

CREATE INDEX IF NOT EXISTS idx_users_username ON users(Username);
CREATE INDEX IF NOT EXISTS idx_users_email ON users(Email);

CREATE TABLE IF NOT EXISTS BlogPost (
  PostID INTEGER PRIMARY KEY AUTOINCREMENT,
  UserID INTEGER NOT NULL,
  Title VARCHAR(100) NOT NULL,
  Body TEXT NOT NULL,
  DateCreated DATETIME DEFAULT CURRENT_TIMESTAMP,
  Tags TEXT,
  FOREIGN KEY (UserID) REFERENCES users(UserID) ON DELETE CASCADE,
  UNIQUE (UserID, Title)
);

CREATE INDEX IF NOT EXISTS idx_blogpost_datecreated ON BlogPost(DateCreated);

CREATE TABLE IF NOT EXISTS Comment (
  CommentID INTEGER PRIMARY KEY AUTOINCREMENT,
  PostID INTEGER NOT NULL,
  UserID INTEGER NOT NULL,
  CommentText TEXT NOT NULL,
  DatePosted DATETIME DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (PostID) REFERENCES BlogPost(PostID) ON DELETE CASCADE,
  FOREIGN KEY (UserID) REFERENCES users(UserID) ON DELETE CASCADE
);

CREATE INDEX IF NOT EXISTS idx_comment_postid ON Comment(PostID);